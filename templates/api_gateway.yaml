AWSTemplateFormatVersion: "2010-09-09"
Description: "template description"

Parameters:
  LambdasStackName:
    Type: String
    Default: 'LambdasStack'

Resources:
  SystemAPI:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: SystemApi
      ProtocolType: HTTP

  APIStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: $default
      ApiId: !Ref SystemAPI
      AutoDeploy: true


  # RekognitionLambda
  LambdaRekognitionIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties: 
      ApiId: !Ref SystemAPI
      IntegrationMethod: POST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - Fn::ImportValue:
              !Sub "${LambdasStackName}-RekognitionLambdaArn"
          - /invocations
      PayloadFormatVersion: '2.0'
      
  LambdaRekognitionRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SystemAPI
      RouteKey: 'POST /celebrecog'
      Target: !Join
        - /
        - - integrations
          - !Ref LambdaRekognitionIntegration

  LambdaRekognitionInvokePerms:
    Type: AWS::Lambda::Permission
    DependsOn:
      - APIStage
    Properties:
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      FunctionName: 
        Fn::ImportValue:
          !Sub "${LambdasStackName}-RekognitionLambdaArn"
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref AWS::AccountId
          - ':'
          - !Ref SystemAPI
          - '/*/*/celebrecog'

  # DeleteCelebLambda
  DeleteCelebLambdaIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties: 
      ApiId: !Ref SystemAPI
      IntegrationMethod: POST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - Fn::ImportValue:
              !Sub "${LambdasStackName}-DeleteCelebLambdaArn"
          - /invocations
      PayloadFormatVersion: '2.0'
      
  DeleteCelebLambdaRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SystemAPI
      RouteKey: 'DELETE /deleteceleb'
      Target: !Join
        - /
        - - integrations
          - !Ref DeleteCelebLambdaIntegration

  DeleteCelebLambdaInvokePerms:
    Type: AWS::Lambda::Permission
    DependsOn:
      - APIStage
    Properties:
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      FunctionName: 
        Fn::ImportValue:
          !Sub "${LambdasStackName}-DeleteCelebLambdaArn"
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref AWS::AccountId
          - ':'
          - !Ref SystemAPI
          - '/*/*/deleteceleb'

  # SubscribeReportsLambda
  SubscribeReportsLambdaIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties: 
      ApiId: !Ref SystemAPI
      IntegrationMethod: POST
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':apigateway:'
          - !Ref 'AWS::Region'
          - ':lambda:path/2015-03-31/functions/'
          - Fn::ImportValue:
              !Sub "${LambdasStackName}-SubscribeReportsLambdaArn"
          - /invocations
      PayloadFormatVersion: '2.0'
      
  SubscribeReportsLambdaRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SystemAPI
      RouteKey: 'POST /subscribe'
      Target: !Join
        - /
        - - integrations
          - !Ref SubscribeReportsLambdaIntegration

  SubscribeReportsLambdaInvokePerms:
    Type: AWS::Lambda::Permission
    DependsOn:
      - APIStage
    Properties:
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      FunctionName: 
        Fn::ImportValue:
          !Sub "${LambdasStackName}-SubscribeReportsLambdaArn"
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - !Ref 'AWS::Region'
          - ':'
          - !Ref AWS::AccountId
          - ':'
          - !Ref SystemAPI
          - '/*/*/subscribe'