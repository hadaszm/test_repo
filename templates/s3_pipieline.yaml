AWSTemplateFormatVersion: '2010-09-09'
# *** Change this to something useful for you!
Description: template for creating pipelines

Parameters:
  BucketsStackName:
    Type: String
    Default: 'BucketsStack'
  RepoOwner:
    Type: String
    Default: hadaszm
  RepoName:
    Type: String
    Default: 'test_repo' 
  RepoBranch:
    Type: String
    Default: 'main'
  PipelineRole:
    Type: String
    Default: arn:aws:iam::980494704750:role/LabRole
  OAuthToken:
    Type: String
    Default: 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

Resources:
  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !Ref PipelineRole
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          InputArtifacts: []
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: 1
            Provider: GitHub
          OutputArtifacts:
          - Name: SourceArtifact
          Configuration:
            Owner: !Ref RepoOwner
            Repo: !Ref RepoName
            Branch: !Ref RepoBranch
            PollForSourceChanges: false
            OAuthToken: !Ref OAuthToken
          RunOrder: 1
      - Name: Deploy
        Actions:
        - Name: Lambda1Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: S3
            Version: '1'
          InputArtifacts:
            - Name: SourceArtifact
          Configuration:
            BucketName: 
              Fn::ImportValue:
                !Sub "${BucketsStackName}-CodeBucketName"
            Extract: 'false'
            ObjectKey: delete_celeb_lambda.zip
          Region: !Ref 'AWS::Region'
          OutputArtifacts: []
        - Name: Lambda2Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: S3
            Version: '1'
          InputArtifacts:
            - Name: SourceArtifact
          Configuration:
            BucketName: 
              Fn::ImportValue:
                !Sub "${BucketsStackName}-CodeBucketName"
            Extract: 'false'
            ObjectKey: rekognition_lambda.zip
          Region: !Ref 'AWS::Region' 
          OutputArtifacts: []         
        - Name: Lambda3Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: S3
            Version: '1'
          InputArtifacts:
            - Name: SourceArtifact
          Configuration:
            BucketName: 
              Fn::ImportValue:
                !Sub "${BucketsStackName}-CodeBucketName"
            Extract: 'false'
            ObjectKey: save_results_lambda.zip
          Region: !Ref 'AWS::Region'
          OutputArtifacts: []
        - Name: Lambda4Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: S3
            Version: '1'
          InputArtifacts:
            - Name: SourceArtifact
          Configuration:
            BucketName: 
              Fn::ImportValue:
                !Sub "${BucketsStackName}-CodeBucketName"
            Extract: 'false'
            ObjectKey: send_report_lambda.zip
          Region: !Ref 'AWS::Region' 
          OutputArtifacts: []       
        - Name: Lambda5Deploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: S3
            Version: '1'
          InputArtifacts:
            - Name: SourceArtifact
          Configuration:
            BucketName: 
              Fn::ImportValue:
                !Sub "${BucketsStackName}-CodeBucketName"
            Extract: 'false'
            ObjectKey: subscribe_reports_lambda.zip
          Region: !Ref 'AWS::Region'
          OutputArtifacts: []
          RunOrder: 1     


  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref OAuthToken
      RegisterWithThirdParty: 'true'
      Filters:
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version



